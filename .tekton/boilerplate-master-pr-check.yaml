apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: boilerplate-master-pr-check
  labels:
    build.appstudio.redhat.com/pipeline: boilerplate-master-pr-check
spec:
  params:
    - description: Snapshot of the application
      name: SNAPSHOT
      default: '{"components": [{"name":"image", "containerImage": "quay.io/redhat-services-prod/openshift/boilerplate:latest", "source":{ "git":{"url": "https://github.com/openshift/boilerplate", "revision": "master"}}}]}'
      type: string
  workspaces:
    - name: shared-workspace
      description: A workspace to share data between tasks
  tasks:
    - name: parse-component-image-spec
      description: Task parses the specific component image spec from the snapshot parameter
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
      taskSpec:
        params:
          - name: SNAPSHOT
        results:
          - name: COMPONENT_IMAGE
            description: parsed component image spec
          - name: COMPONENT_GIT_URL
            description: parsed component git url
          - name: COMPONENT_GIT_REVISION
            description: parsed component git revision
        steps:
          - image: "registry.access.redhat.com/ubi8/ubi-minimal:latest@sha256:951ee3cabb74246821ae31c2b808b7789310f5509882c153b7b178aaaeefa2d3"
            env:
              - name: SNAPSHOT
                value: $(params.SNAPSHOT)
            script: |
              microdnf -y install jq
              COMPONENT_IMAGE=$(echo ${SNAPSHOT} | jq -r '.components[] | select(.name=="image") | .containerImage')
              COMPONENT_GIT_URL=$(echo ${SNAPSHOT} | jq -r '.components[] | select(.name=="image") | .source.git.url')
              COMPONENT_GIT_REVISION=$(echo ${SNAPSHOT} | jq -r '.components[] | select(.name=="image") | .source.git.revision')
              echo -n "${COMPONENT_IMAGE}" | tee $(results.COMPONENT_IMAGE.path)
              echo -n "${COMPONENT_GIT_URL}" | tee $(results.COMPONENT_GIT_URL.path)
              echo -n "${COMPONENT_GIT_REVISION}" | tee $(results.COMPONENT_GIT_REVISION.path)
    - name: clone-repository
      description: Clone the repository
      runAfter:
        - parse-component-image-spec
      params:
        - name: url
          value: $(tasks.parse-component-image-spec.results.COMPONENT_GIT_URL)
        - name: revision
          value: $(tasks.parse-component-image-spec.results.COMPONENT_GIT_REVISION)
        - name: fetchTags
          value: "true"
        - name: depth
          value: "0"
        - name: verbose
          value: "true"
      taskRef:
        params:
          - name: name
            value: git-clone
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:90d2d42d17e6276ef45505cbb5a78598e5f5186257d0ee2260b3d4835f1c2d6b
          - name: kind
            value: task
        resolver: bundles
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: execute-boilerplate-pr-check
      description: Run the boilerplate pr-check
      runAfter:
        - clone-repository
      timeout: "1h"
      params:
        - name: COMPONENT_IMAGE
          value: $(tasks.parse-component-image-spec.results.COMPONENT_IMAGE)
      taskSpec:
        params:
          - name: COMPONENT_IMAGE
        steps:
          - image: $(params.COMPONENT_IMAGE)
            command:
              - make
            args:
              - pr-check
            workingDir: "$(workspaces.shared-workspace.path)/source"
